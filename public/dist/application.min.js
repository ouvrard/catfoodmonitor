"use strict";var ApplicationConfiguration=function(){var applicationModuleName="catfoodmonitor",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","chart.js"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("metrics"),ApplicationConfiguration.registerModule("sigfoxdevices"),ApplicationConfiguration.registerModule("sigfoxmsgs"),ApplicationConfiguration.registerModule("users"),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);var coreApp=angular.module("core");coreApp.controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),coreApp.config(["ChartJsProvider",function(ChartJsProvider){ChartJsProvider.setOptions({responsive:!0,tooltipTemplate:"<%= value %>"}),ChartJsProvider.setOptions("Line",{bezierCurve:!1})}]),coreApp.controller("HeaderController",["$scope",function($scope){$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),coreApp.controller("aDayAgoChart",["$scope",function($scope){$scope.options={colours:["#FF5200","#FF8A80"],color:"#F7464A",scaleShowHorizontalLines:!1,label:"My First dataset",fillColor:"rgba(220,220,220,0.2)",strokeColor:"rgba(220,220,220,1)"},$scope.labels=["8h","09","","","12","","","15","","","18","","","21","","","00","","","03","","","06","07"],$scope.series=["Series A"],$scope.data=[[130,130,122,115,97,96,73,50,225,210,190]]}]),coreApp.controller("foodConsChartCtrl",["$scope",function($scope){$scope.weekLabels=["Thue","Wed","Thur","Fri","Sat","Sun","Mon"],$scope.dayLabels=["01","","","04","","","","08","","","","12","","","","16","","","","20","","","","00"],$scope.series=["Series A"],$scope.dayData=[[28,48,40,19,86,27,90]],$scope.weekData=[[28,48,40,19,86,27,90]]}]),coreApp.controller("foodConsumptionCtrl",["$scope",function($scope){$scope.today=15,$scope.week=154}]),coreApp.controller("foodLevelCtrl",["$scope",function($scope){$scope.now=124,$scope.oneHourAgo=-17}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mes","mes","dropdown","/mes(/create)?"),Menus.addSubMenuItem("topbar","mes","List Mes","mes"),Menus.addSubMenuItem("topbar","mes","New Me","mes/create")}]),angular.module("metrics").config(["ChartJsProvider",function(ChartJsProvider){ChartJsProvider.setOptions({responsive:!0,tooltipTemplate:"<%= value %>"}),ChartJsProvider.setOptions("Line",{bezierCurve:!1})}]),angular.module("metrics").config(["$stateProvider",function($stateProvider){$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("listMetrics",{url:"/metrics",templateUrl:"modules/metrics/views/list-metrics.client.view.html"}).state("createMetric",{url:"/metrics/create",templateUrl:"modules/metrics/views/create-metric.client.view.html"}).state("viewMetric",{url:"/metrics/:metricId",templateUrl:"modules/metrics/views/view-metric.client.view.html"}).state("editMetric",{url:"/metrics/:metricId/edit",templateUrl:"modules/metrics/views/edit-metric.client.view.html"})}]);var metricsModule=angular.module("metrics");metricsModule.controller("MetricsController",["$scope","$stateParams","$location","Authentication","Metrics",function($scope,$stateParams,$location,Authentication,Metrics){$scope.authentication=Authentication,$scope.create=function(){var metric=new Metrics({name:this.name});metric.$save(function(response){$location.path("metrics/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(metric){if(metric){metric.$remove();for(var i in $scope.metrics)$scope.metrics[i]===metric&&$scope.metrics.splice(i,1)}else $scope.metric.$remove(function(){$location.path("metrics")})},$scope.update=function(){var metric=$scope.metric;metric.$update(function(){$location.path("metrics/"+metric._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.metrics=Metrics.query()},$scope.findOne=function(){$scope.dayData=[],$scope.metric=Metrics.get({metricId:$stateParams.metricId}),$scope.metric.$promise.then(function(){var now=moment().utc(),yesterday=moment().utc().subtract(1,"day"),hourAgo=moment().utc().subtract(1,"hour");$scope.hour=now.hour(),$scope.day=now.day(),$scope.hourAgo=hourAgo.hour(),$scope.lastDay=yesterday.day(),$scope.TZOffset=moment().utcOffset()/60,console.log($scope),console.log(moment().utcOffset()),$scope.daysOfTheWeek=["D","L","M","Me","J","V","S"],$scope.weekLabels=[],$scope.weekData=[[]],$scope.dayLabels=["00","","","03","","","06","","","09","","","12","","","15","","","18","","","21","",""],$scope.dayData=[[]],$scope.labels=[],$scope.data=[[]],$scope.today=0,$scope.week=0;var i,j,n,m,iH,iH2,utc,id;for(i=0;24>i;i++)for("undefined"!=typeof $scope.metric.dailyMetrics[i]&&($scope.metric.dailyMetrics[i]._id==$scope.hourAgo&&($scope.oneHourAgo=Math.round($scope.metric.dailyMetrics[i].load)),$scope.metric.dailyMetrics[i]._id==$scope.hour&&($scope.now=Math.round($scope.metric.dailyMetrics[i].load))),iH=(i+$scope.hour+$scope.TZOffset+1)%24,iH2=(24+iH-$scope.TZOffset)%24,utc=(24+i-$scope.TZOffset)%24,i%4===0||23===i?$scope.labels[i]=(10>iH?"0":"")+iH:$scope.labels[i]="",$scope.dayData[0][i]=0,23>i&&($scope.data[0][i]=0),j=0,n=$scope.metric.dailyMetrics.length;n>j;j++)id=$scope.metric.dailyMetrics[j]._id,id===utc&&utc<=$scope.hour&&($scope.today+=$scope.metric.dailyMetrics[j].delta,$scope.dayData[0][i]=$scope.metric.dailyMetrics[j].delta),id===iH2&&($scope.data[0][i]=$scope.metric.dailyMetrics[j].load);for("undefined"!=typeof $scope.now?"undefined"!=typeof $scope.oneHourAgo?$scope.oneHourAgo=$scope.now-$scope.oneHourAgo:$scope.oneHourAgo="n/a":($scope.now="n/a",$scope.oneHourAgo="n/a"),$scope.today=Math.round($scope.today),i=0,n=7;n>i;++i){var d=(i+$scope.day+1)%n;for($scope.weekLabels[i]=$scope.daysOfTheWeek[d],$scope.weekData[0][i]=0,j=0,m=$scope.metric.weeklyMetrics.length;m>j;j++)if($scope.metric.weeklyMetrics[j]._id-1===d){$scope.weekData[0][i]=$scope.metric.weeklyMetrics[j].delta;break}m>i&&($scope.week+=$scope.metric.weeklyMetrics[i].delta)}$scope.week=Math.round($scope.week)})}}]),metricsModule.controller("aDayAgoChart",["$scope",function($scope){}]),metricsModule.controller("foodConsChartCtrl",["$scope",function($scope){}]),metricsModule.controller("foodConsumptionCtrl",["$scope",function($scope){}]),metricsModule.controller("foodLevelCtrl",["$scope",function($scope){}]),metricsModule.controller("slidesCtrl",["$scope",function($scope){$scope.interval=0,$scope.pause=!0,$scope.slides=[{image:"/modules/metrics/img/story/01.jpg",caption:"Suivi en temps réel de la consommation alimentaire de mes chats",desc:"Le principe repose sur la mesure du poids du récipient contenant la nourriture de mes chats au cours du temps pour en déduire la variation de masse et donc la quantité consommée."},{image:"/modules/metrics/img/story/02.jpg",caption:"Matériel nécessaire",desc:""},{image:"/modules/metrics/img/story/03.jpg",caption:"La balance",desc:"Il s'agit d'une balance de cuisine que l'on trouve dans le commerce."},{image:"/modules/metrics/img/story/04.jpg",caption:"",desc:"Il faut la démonter pour accéder à la carte électronique."},{image:"/modules/metrics/img/story/05.jpg",caption:"",desc:"Le capteur possède 4 fils repérés B, G, Y et R."},{image:"/modules/metrics/img/story/06.jpg",caption:"",desc:"Un simple désoudage et on les rallongent pour les faire sortir."},{image:"/modules/metrics/img/story/07.jpg",caption:"",desc:"Il est désormais possible de raccorder le capteur à la carte Arduino."},{image:"/modules/metrics/img/story/08.jpg",caption:"Le montage életronique",desc:"Le signal du capteur de force dans la balance est trop faible pour être détécté. Le rôle du circuit imprimmé est amplifier le signal."},{image:"/modules/metrics/img/story/09.jpg",caption:"",desc:"Le montage fini..."},{image:"/modules/metrics/img/story/10.jpg",caption:"",desc:"Après calibration au potentiomètre, la résistance de gain pour l'amplificateur doit être d'environ 50 Ohms. ... Ce qui explique les 5 résitances de 10 Ohms en série !"},{image:"/modules/metrics/img/story/11.jpg",caption:"",desc:"Les cartes Akeru sont des Arduino avec un modem radio UNB pour émettre sur les fréquences utilisée par SigFox. Il faut simplement charger la bibliothèque Akeru pour faire fonctionner le modem."},{image:"/modules/metrics/img/story/12.jpg",caption:"",desc:"A la mise sous tension, le programme fait la tare du récipent pour ne peser que sont contenu. Ensuite, toutes les 15 minutes, la masse est envoyée sur le réseaux Sigfox."},{image:"/modules/metrics/img/story/13.jpg",caption:"Transit sur le réseau Sigfox",desc:"Le message émit par la carte est capté par les antennes de Sigfox, puis transféré sur le serveur de l'application"},{image:"/modules/metrics/img/story/14.jpg",caption:"Application",desc:"L’application (client/serveur) est basée sur MEAN.JS qui est une solution javascript fullstack. MongoDB (base de données), Express (framework Node.JS), AngularJS (framework client) et Node.JS (serveur)."},{image:"/modules/metrics/img/story/15.jpg",caption:"",desc:"L’application serveur dispose d’une API pour réceptionner les messages provenant du réseau Sigfox mais assure également les interactions avec le client web. L’application client est une Single Page Application sous AnugularJs qui dialogue avec l’application serveur via une autre API, notamment pour l’affichage des métriques."},{image:"/modules/metrics/img/story/16.jpg",caption:"Conclusion",desc:"Le système en fonctionnement."},{image:"/modules/metrics/img/story/17.jpg",caption:"",desc:"Aucun animal n’a été blessé pendant ce projet."}]}]),angular.module("metrics").factory("Metrics",["$resource",function($resource){return $resource("metrics/:metricId",{metricId:"@_id"},{update:{method:"PUT"}})}]),angular.module("sigfoxdevices").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSigfoxdevices",{url:"/sigfoxdevices",templateUrl:"modules/sigfoxdevices/views/list-sigfoxdevices.client.view.html"}).state("createSigfoxdevice",{url:"/sigfoxdevices/create",templateUrl:"modules/sigfoxdevices/views/create-sigfoxdevice.client.view.html"}).state("viewSigfoxdevice",{url:"/sigfoxdevices/:sigfoxdeviceId",templateUrl:"modules/sigfoxdevices/views/view-sigfoxdevice.client.view.html"}).state("editSigfoxdevice",{url:"/sigfoxdevices/:sigfoxdeviceId/edit",templateUrl:"modules/sigfoxdevices/views/edit-sigfoxdevice.client.view.html"})}]),angular.module("sigfoxdevices").controller("SigfoxdevicesController",["$scope","$stateParams","$location","Authentication","Sigfoxdevices",function($scope,$stateParams,$location,Authentication,Sigfoxdevices){$scope.authentication=Authentication,$scope.create=function(){var sigfoxdevice=new Sigfoxdevices({name:this.name});sigfoxdevice.$save(function(response){$location.path("sigfoxdevices/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(sigfoxdevice){if(sigfoxdevice){sigfoxdevice.$remove();for(var i in $scope.sigfoxdevices)$scope.sigfoxdevices[i]===sigfoxdevice&&$scope.sigfoxdevices.splice(i,1)}else $scope.sigfoxdevice.$remove(function(){$location.path("sigfoxdevices")})},$scope.update=function(){var sigfoxdevice=$scope.sigfoxdevice;sigfoxdevice.$update(function(){$location.path("sigfoxdevices/"+sigfoxdevice._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.sigfoxdevices=Sigfoxdevices.query()},$scope.findOne=function(){$scope.sigfoxdevice=Sigfoxdevices.get({sigfoxdeviceId:$stateParams.sigfoxdeviceId})}}]),angular.module("sigfoxdevices").factory("Sigfoxdevices",["$resource",function($resource){return $resource("sigfoxdevices/:sigfoxdeviceId",{sigfoxdeviceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mes","mes","dropdown","/mes(/create)?"),Menus.addSubMenuItem("topbar","mes","List Mes","mes"),Menus.addSubMenuItem("topbar","mes","New Me","mes/create")}]),angular.module("sigfoxmsgs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSigfoxmsgs",{url:"/sigfoxmsgs",templateUrl:"modules/sigfoxmsgs/views/list-sigfoxmsgs.client.view.html"}).state("createSigfoxmsg",{url:"/sigfoxmsgs/create",templateUrl:"modules/sigfoxmsgs/views/create-sigfoxmsg.client.view.html"}).state("viewSigfoxmsg",{url:"/sigfoxmsgs/:sigfoxmsgId",templateUrl:"modules/sigfoxmsgs/views/view-sigfoxmsg.client.view.html"}).state("editSigfoxmsg",{url:"/sigfoxmsgs/:sigfoxmsgId/edit",templateUrl:"modules/sigfoxmsgs/views/edit-sigfoxmsg.client.view.html"})}]),angular.module("sigfoxmsgs").controller("SigfoxmsgsController",["$scope","$stateParams","$location","Authentication","Sigfoxmsgs",function($scope,$stateParams,$location,Authentication,Sigfoxmsgs){$scope.authentication=Authentication,$scope.create=function(){var sigfoxmsg=new Sigfoxmsgs({name:this.name});sigfoxmsg.$save(function(response){$location.path("sigfoxmsgs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(sigfoxmsg){if(sigfoxmsg){sigfoxmsg.$remove();for(var i in $scope.sigfoxmsgs)$scope.sigfoxmsgs[i]===sigfoxmsg&&$scope.sigfoxmsgs.splice(i,1)}else $scope.sigfoxmsg.$remove(function(){$location.path("sigfoxmsgs")})},$scope.update=function(){var sigfoxmsg=$scope.sigfoxmsg;sigfoxmsg.$update(function(){$location.path("sigfoxmsgs/"+sigfoxmsg._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.sigfoxmsgs=Sigfoxmsgs.query()},$scope.findOne=function(){$scope.sigfoxmsg=Sigfoxmsgs.get({sigfoxmsgId:$stateParams.sigfoxmsgId})}}]),angular.module("sigfoxmsgs").factory("Sigfoxmsgs",["$resource",function($resource){return $resource("sigfoxmsgs/:sigfoxmsgId",{sigfoxmsgId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);